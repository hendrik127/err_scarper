version: '3.8'
services:
  # frontend:
  #   build:
  #     context: ./frontend
  #   ports:
  #     - "3000:3000"
  #   command: npm start
  #   depends_on:
  #     - scraper-api
  scraper-api:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: sh -c "python database.py && uvicorn main:app --host 0.0.0.0 --port 80"

    ports:
      - "80:80"
    environment:
      DATABASE_URL: "postgresql://postgres:password@database:5432/scraperdb"  # Update with your PostgreSQL database URL
      SQLALCHEMY_DATABASE_URI: "postgresql://postgres:password@database:5432/scraperdb"  # Add SQLAlchemy database URI
    depends_on:
      - database  # Make sure scraper-api service waits for the database service to be up
    restart: on-failure:5

  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: scraperdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
  rabbitmq:
    image: 'rabbitmq'
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
  tts_api:
    image: ghcr.io/tartunlp/text-to-speech-api:latest
    environment:
      - MQ_HOST=rabbitmq
      - MQ_PORT=5672
      - MQ_USERNAME=${RABBITMQ_USER}
      - MQ_PASSWORD=${RABBITMQ_PASS}
    ports:
      - '8000:8000'
    depends_on:
      - rabbitmq
  tts_worker:
    image: ghcr.io/tartunlp/text-to-speech-worker:latest
    environment:
      - MQ_HOST=rabbitmq
      - MQ_PORT=5672
      - MQ_USERNAME=${RABBITMQ_USER}
      - MQ_PASSWORD=${RABBITMQ_PASS}
    command: [ "--model-name", "multispeaker" ]
    volumes:
      - ./models:/app/models
    depends_on:
      - rabbitmq 
